<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
  
  <entry>
    <title>Sublime</title>
    <link href="/2023/03/19/Sublime/"/>
    <url>/2023/03/19/Sublime/</url>
    
    <content type="html"><![CDATA[<h1 id="软件安装"><a href="#软件安装" class="headerlink" title="软件安装"></a>软件安装</h1><ol><li>关闭杀毒软件</li><li>破解软件</li><li>安装注意事项<blockquote><p>勾选右键中使用sublime打开文件的选项，最终邮件会出现“open with sublime text”菜单</p></blockquote></li></ol><h1 id="常用配置"><a href="#常用配置" class="headerlink" title="常用配置"></a>常用配置</h1><blockquote><p> sublime4 配置不用在配置文件上直接修改，需要自己写（好处是改错配置时，可以直接恢复默认设置）</p></blockquote><ol><li>字体大小<br> “font_size”: 14,</li><li>字体类型<br> “font_face”: “微软雅黑”</li><li>行号<br> “line_numbers”: false,</li><li>左边距<br> “gutter”: true,</li><li>左边距距离<br> “margin”: 0</li><li>背景高亮<br> “highlight_line”: true,</li><li>行号背景高亮<br> “highlight_line_number”: true</li><li>默认编码<br> “default_encoding”: “UTF-8”</li><li>代码补全<br> “auto_complete”: true,</li><li>符号补全<br>“auto_match_enabled”: true,</li><li>开启vi模式<br>“ignored_packages”: [“Vintage”],</li><li>vi默认进入模式<br>“vintage_start_in_command_mode”: false,</li></ol><h1 id="快捷键"><a href="#快捷键" class="headerlink" title="快捷键"></a>快捷键</h1><ol><li>侧边栏：command + k + b</li><li>按住ctrl + 单机标签,</li><li>插件：ctrl + shift + p</li></ol><h1 id="AutoHotkey-代码输入效率提升"><a href="#AutoHotkey-代码输入效率提升" class="headerlink" title="AutoHotkey 代码输入效率提升"></a>AutoHotkey 代码输入效率提升</h1><h1 id="插件"><a href="#插件" class="headerlink" title="插件"></a>插件</h1><ol><li>插件控制器：Package Control<blockquote><p>首先安装 <code>Package Control: Install Package</code></p></blockquote></li><li>中文菜单: ChineseLocalization</li><li>代码块高亮: BracketHighlighter</li><li>高级另存为: Save Copy As</li><li>高级左侧栏: SideBarEnHancements</li></ol><h6 id="参考资料"><a href="#参考资料" class="headerlink" title="参考资料"></a>参考资料</h6><p>[【云知梦】Sublime4开发编辑器&#x2F;简单&#x2F;快捷&#x2F;高效](【【云知梦】Sublime4开发编辑器&#x2F;简单&#x2F;快捷&#x2F;高效】 <a href="https://www.bilibili.com/video/BV1PB4y1t7KZ/?share_source=copy_web&vd_source=b30da292ed40bd8e4644993d25ebba81">https://www.bilibili.com/video/BV1PB4y1t7KZ/?share_source=copy_web&amp;vd_source=b30da292ed40bd8e4644993d25ebba81</a>)</p>]]></content>
    
    
    
    <tags>
      
      <tag>Editor</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>win10任务栏时间显示秒</title>
    <link href="/2023/03/17/win10%E4%BB%BB%E5%8A%A1%E6%A0%8F%E6%97%B6%E9%97%B4%E6%98%BE%E7%A4%BA%E7%A7%92/"/>
    <url>/2023/03/17/win10%E4%BB%BB%E5%8A%A1%E6%A0%8F%E6%97%B6%E9%97%B4%E6%98%BE%E7%A4%BA%E7%A7%92/</url>
    
    <content type="html"><![CDATA[<ol><li><p>编辑注册表</p><ol><li><code>win+R</code> 打开运行，输入<code>regedit</code>，打开注册表编辑器</li><li>定位到：<code>HKEY_CURRENT_USER\SOFTWARE\Microsoft\Windows\CurrentVersion\Explorer\Advanced</code></li><li>新建DWORD（32位）值，命名为**”ShowSecondsInSystemClock”**，修改数值数据为1，点击“确认”。</li></ol><p><img src="/./assets/20191107141547_71027.gif" alt="20191107141547_71027"></p></li><li><p>重启<strong>Windows档案总管</strong>(Windows 资源管理器)，检查是否更改成功</p></li></ol><h6 id="参考资料"><a href="#参考资料" class="headerlink" title="参考资料"></a>参考资料</h6><p><a href="https://page.sm.cn/blm/midpage-317/index?uc_param_str=dnntnwvepffrbijbprsvchgputdemennosstodcaaagidsdieini&q=Win10%E4%BB%BB%E5%8A%A1%E6%A0%8F%E6%98%BE%E7%A4%BA%E5%88%B0%E7%A7%92&from=kkframenew&title=%3Cem%3Ewin10%E4%BB%BB%E5%8A%A1%E6%A0%8F%3C/em%3E%E6%97%B6%E9%97%B4%3Cem%3E%E6%98%BE%E7%A4%BA%E7%A7%92%3C/em%3E%E6%80%8E%E4%B9%88%E8%AE%BE%E7%BD%AE-%E7%B3%BB%E7%BB%9F%E5%AE%B6%E5%9B%AD&h=www.somode.com&id=10_50586486c07ae72f559d516976e5e86e">win10任务栏时间显示秒怎么设置</a></p>]]></content>
    
    
    
    <tags>
      
      <tag>Windows</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Unix</title>
    <link href="/2023/03/15/Unix/"/>
    <url>/2023/03/15/Unix/</url>
    
    <content type="html"><![CDATA[<h1 id="Unix文件结构"><a href="#Unix文件结构" class="headerlink" title="Unix文件结构"></a>Unix文件结构</h1><p>UNIX 的文件结构就像一棵倒置的树，按层次结构排列。</p><ul><li>目录的顶层是根 <strong>&#x2F;</strong> 。root连接其他文件和目录的路径</li><li>每个目录都有一个唯一的名称。它们每个都包含不同种类的文件和目录</li></ul><p>这是 Unix 文件结构的样子：</p><p><img src="https://learn.theprogrammingfoundation.org/assets/images/structure-4f96bc5b7d9915a1c843931c9668cb3c.png" alt="文件结构"></p><h1 id="Unix-shell"><a href="#Unix-shell" class="headerlink" title="Unix shell"></a>Unix shell</h1><h2 id="介绍"><a href="#介绍" class="headerlink" title="介绍"></a>介绍</h2><p>shell 是用于基于 Unix 的操作系统的交互式命令行界面。用户可以键入命令来完成某些任务</p><h2 id="打印消息"><a href="#打印消息" class="headerlink" title="打印消息"></a>打印消息</h2><p>要在 Unix shell 中显示<strong>Hello消息</strong>，请键入：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">user@:~$ echo &quot;Hello&quot;<br></code></pre></td></tr></table></figure><blockquote><p>引号不是必须的，但如果消息包含特殊字符，则会显示错误。因此，使用引号是一种很好的做法</p></blockquote><h2 id="清屏"><a href="#清屏" class="headerlink" title="清屏"></a>清屏</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">user@apple:~$ clear<br></code></pre></td></tr></table></figure><h2 id="列出文件和目录"><a href="#列出文件和目录" class="headerlink" title="列出文件和目录"></a>列出文件和目录</h2><p>要列出所有目录和文件:</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">user@apple:~$ ls<br></code></pre></td></tr></table></figure><h2 id="浏览目录"><a href="#浏览目录" class="headerlink" title="浏览目录"></a>浏览目录</h2><p>要进入目录，请键入：</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs sh">user@apple:~$ <span class="hljs-built_in">cd</span> Pictures<br></code></pre></td></tr></table></figure><p>shell 提示符在当前目录的开头显示一个**&#x2F; ：**</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs sh">user@apple:~/Pictures$<br></code></pre></td></tr></table></figure><p>要在不进入目录的情况下列出目录的内容，请键入：</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs sh">user@apple:~$ <span class="hljs-built_in">ls</span> Pictures<br></code></pre></td></tr></table></figure><h2 id="创建目录和文件"><a href="#创建目录和文件" class="headerlink" title="创建目录和文件"></a>创建目录和文件</h2><p>要在 Unix 文件系统中创建一个新目录，请键入：</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs sh">user@apple:~$ <span class="hljs-built_in">mkdir</span> new_directory<br></code></pre></td></tr></table></figure><p>可以使用以下方法创建多个目录：</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs sh">user@apple:~$ <span class="hljs-built_in">mkdir</span> new_directory1 new_directory2<br></code></pre></td></tr></table></figure><blockquote><p>如果同名目录已存在，则 shell 会显示错误。</p></blockquote><p>要在 Unix 文件系统中创建文件，请键入：</p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs text">user@apple:~$ touch file.txt<br><br></code></pre></td></tr></table></figure><p>可以使用以下方法创建具有不同扩展名的多个文件：</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs sh">user@apple:~$ <span class="hljs-built_in">touch</span> program.c program.h<br><br></code></pre></td></tr></table></figure><blockquote><p>如果现有文件同名，Unix 会用新文件替换现有文件。</p></blockquote><h2 id="添加和编辑文件内容"><a href="#添加和编辑文件内容" class="headerlink" title="添加和编辑文件内容"></a>添加和编辑文件内容</h2><p>可以使用不同的程序（例如<strong>GNU nano</strong>、<strong>Vim</strong>或<strong>Emacs</strong> ）在文本文件中添加文本。</p><p><strong>要使用文本编辑器Vim</strong>创建文件并添加文本，请键入：</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs sh">user@apple:~$ vim file.txt<br><br></code></pre></td></tr></table></figure><p>添加一些文本，按**[Esc]<strong>，然后输入</strong>:wq**保存。</p><blockquote><p>在 Vim 中，<strong>w</strong>代表写入，<strong>q</strong>代表退出。</p></blockquote><h2 id="读取文件"><a href="#读取文件" class="headerlink" title="读取文件"></a>读取文件</h2><p>要读取文本文件，请键入：</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs sh">user@apple:~$ <span class="hljs-built_in">cat</span> file.txt<br><br></code></pre></td></tr></table></figure><h2 id="删除文件和目录"><a href="#删除文件和目录" class="headerlink" title="删除文件和目录"></a>删除文件和目录</h2><p>要从 Unix 文件系统中删除文件，请键入：</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs sh">user@apple:~$ <span class="hljs-built_in">rm</span> file.txt<br><br></code></pre></td></tr></table></figure><p>可以使用标志 -r 删除目录：</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs sh">user@apple:~$ <span class="hljs-built_in">rm</span> -r new_directory<br><br></code></pre></td></tr></table></figure><p><a href="https://learn.theprogrammingfoundation.org/os/unix/">参考网站</a></p>]]></content>
    
    
    
    <tags>
      
      <tag>Mac</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>nvm</title>
    <link href="/2023/03/09/nvm/"/>
    <url>/2023/03/09/nvm/</url>
    
    <content type="html"><![CDATA[<h1 id="nvm"><a href="#nvm" class="headerlink" title="nvm"></a>nvm</h1><h2 id="一、安装"><a href="#一、安装" class="headerlink" title="一、安装"></a>一、安装</h2><ol><li><p>下载地址：<a href="https://blog.csdn.net/m0_64697285/article/details/127318141">https://blog.csdn.net/m0_64697285/article/details/127318141</a></p></li><li><p>注意安装路径：第一个路径就是软件安装路径，第二个需要按要求写，路径+<code>\nodejs</code></p><p>（建议：路径最好是新建好文件夹之后选择，如果直接填写路径可能不会自动生成目标文件夹，后面也需要新建）</p></li><li><p>更改setting中的配置（淘宝镜像</p><p>node_mirror: <a href="https://npm.taobao.org/mirrors/node/">https://npm.taobao.org/mirrors/node/</a><br>npm_mirror: <a href="https://npm.taobao.org/mirrors/npm/">https://npm.taobao.org/mirrors/npm/</a></p></li></ol><h2 id="二、使用"><a href="#二、使用" class="headerlink" title="二、使用"></a>二、使用</h2><ul><li><p>nvm list 查看安装的所有node版本</p></li><li><p>nvm use + 版本号  切换版本</p></li><li><p>nvm install + 版本号   安装其他版本</p></li><li><p>nvm uninstall + 版本号  卸载安装的某一版本</p></li></ul>]]></content>
    
    
    
    <tags>
      
      <tag>node</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>VueRouter</title>
    <link href="/2023/03/08/VueRouter/"/>
    <url>/2023/03/08/VueRouter/</url>
    
    <content type="html"><![CDATA[<p>理解了函数的封装（模块化）和导出有助于理解路由</p><h1 id="路由index-js"><a href="#路由index-js" class="headerlink" title="路由index.js"></a>路由index.js</h1><ol><li>先引入（这里在创建时项目时就已经配置好了）</li><li>在实例中添加函数</li><li>定义路由的映射配置文件</li><li>实例化路由</li><li>导出路由</li></ol><h2 id="index-js路由样例"><a href="#index-js路由样例" class="headerlink" title="index.js路由样例"></a>index.js路由样例</h2><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><code class="hljs js"><span class="hljs-keyword">import</span> <span class="hljs-title class_">Vue</span> form <span class="hljs-string">&#x27;vue&#x27;</span><br><span class="hljs-keyword">import</span> <span class="hljs-title class_">VueRouter</span> <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;vue-router&#x27;</span><br><span class="hljs-keyword">import</span> <span class="hljs-title class_">HomeView</span> form <span class="hljs-string">&#x27;../views/HomeView.vue&#x27;</span><br><br><span class="hljs-title class_">Vue</span>.<span class="hljs-title function_">use</span>(<span class="hljs-title class_">VueRouter</span>)<br><span class="hljs-comment">//映射配置</span><br><span class="hljs-keyword">const</span> routes = [<br>    &#123;<br>        <span class="hljs-attr">path</span>: <span class="hljs-string">&#x27;/&#x27;</span>,<br>        <span class="hljs-attr">component</span>:<span class="hljs-title class_">HomeView</span><br>    &#125;,<br>    <span class="hljs-comment">//方式二</span><br>    &#123;<br>        <span class="hljs-attr">path</span>: <span class="hljs-string">&#x27;/about&#x27;</span>,<br>        <span class="hljs-attr">component</span>:<span class="hljs-function">() =&gt;</span> <span class="hljs-keyword">import</span>(<span class="hljs-string">&#x27;../views/AboutView.vue&#x27;</span>)<br>    &#125;<br>]<br><span class="hljs-comment">//实例化</span><br><span class="hljs-keyword">const</span> router = <span class="hljs-keyword">new</span> <span class="hljs-title class_">VueRouter</span>(&#123;<br>    <span class="hljs-attr">routes</span>:routes<br>&#125;)<br><span class="hljs-comment">//导出</span><br><span class="hljs-keyword">export</span> <span class="hljs-keyword">default</span> router<br></code></pre></td></tr></table></figure><h2 id="动态路由匹配"><a href="#动态路由匹配" class="headerlink" title="动态路由匹配"></a>动态路由匹配</h2><h3 id="案例"><a href="#案例" class="headerlink" title="案例"></a>案例</h3><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs js"><span class="hljs-attr">routes</span>: [<br>    <span class="hljs-comment">// 动态路径参数 以冒号开头</span><br>    &#123; <span class="hljs-attr">path</span>: <span class="hljs-string">&#x27;/user/:id&#x27;</span>, <span class="hljs-attr">component</span>: <span class="hljs-title class_">User</span> &#125;<br>  ]<br></code></pre></td></tr></table></figure><p>三种方式，页面数据随url的变化而变化</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><code class="hljs js"><span class="hljs-title function_">created</span>(<span class="hljs-params"></span>) &#123;<br>        <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(<span class="hljs-variable language_">this</span>.<span class="hljs-property">$route</span>.<span class="hljs-property">params</span>.<span class="hljs-property">id</span>)<br>        <span class="hljs-keyword">if</span> (<span class="hljs-variable language_">this</span>.<span class="hljs-property">$route</span>.<span class="hljs-property">params</span>.<span class="hljs-property">id</span> &gt; <span class="hljs-number">4</span>) &#123;<br>            <span class="hljs-variable language_">this</span>.<span class="hljs-property">user</span> = &#123; <span class="hljs-attr">id</span>: <span class="hljs-number">0</span>, <span class="hljs-attr">name</span>: <span class="hljs-string">&#x27;无此用户&#x27;</span>, <span class="hljs-attr">sex</span>: <span class="hljs-string">&#x27;&#x27;</span>, <span class="hljs-attr">email</span>: <span class="hljs-string">&#x27;&#x27;</span> &#125;<br>        &#125; <span class="hljs-keyword">else</span> &#123;<br>            <span class="hljs-variable language_">this</span>.<span class="hljs-property">user</span> = <span class="hljs-variable language_">this</span>.<span class="hljs-property">users</span>[<span class="hljs-built_in">parseInt</span>(<span class="hljs-variable language_">this</span>.<span class="hljs-property">$route</span>.<span class="hljs-property">params</span>.<span class="hljs-property">id</span>) - <span class="hljs-number">1</span>]<br>        &#125;<br><br><br>        <span class="hljs-comment">// 老师的做法</span><br>        <span class="hljs-comment">// 接受传参</span><br>        <span class="hljs-keyword">let</span> id = <span class="hljs-variable language_">this</span>.<span class="hljs-property">$route</span>.<span class="hljs-property">params</span>.<span class="hljs-property">id</span>;<br>        <span class="hljs-comment">// 第一种通过循环</span><br>        <span class="hljs-comment">// 数组变量名称.map((数组单一元素，下标)=&gt;&#123;&#125;)</span><br><br>        <span class="hljs-comment">//     this.Users.map((item,index)=&gt;&#123;</span><br>        <span class="hljs-comment">//         if(item.id == id)&#123;</span><br>        <span class="hljs-comment">//             this.user = item</span><br>        <span class="hljs-comment">//         &#125;</span><br>        <span class="hljs-comment">//     &#125;)  </span><br><br>        <span class="hljs-keyword">let</span> userinfo = <span class="hljs-variable language_">this</span>.<span class="hljs-property">users</span>.<span class="hljs-title function_">find</span>(<span class="hljs-function">(<span class="hljs-params">item</span>) =&gt;</span> &#123;<br>            <span class="hljs-keyword">return</span> item.<span class="hljs-property">id</span> == id;<br>        &#125;)<br>        <span class="hljs-keyword">if</span> (userinfo != <span class="hljs-literal">undefined</span>) &#123;<br>            <span class="hljs-variable language_">this</span>.<span class="hljs-property">user</span> = userinfo;<br>        &#125;<br>    &#125;,<br></code></pre></td></tr></table></figure><p>上面实现的响应，每次都需要刷新页面，依次加入一下代码，实现动态响应</p><p><code>&lt;router-link to=&quot;/&quot;&gt;首页&lt;/router-link&gt;</code></p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><code class="hljs js"><span class="hljs-comment">// 监听路由变化</span><br>    <span class="hljs-attr">watch</span>:&#123;<br>        $route(to, form)&#123;<br>            <span class="hljs-comment">// 新页面的路由对象</span><br>            <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(to);<br>            <span class="hljs-comment">// 旧页面的路由对象</span><br>            <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(form);<br>            <span class="hljs-variable language_">this</span>.<span class="hljs-title function_">getinfo</span>()<br>        &#125;<br>    &#125;,<br><span class="hljs-attr">methods</span>:&#123;<br>        <span class="hljs-title function_">getinfo</span>(<span class="hljs-params"></span>)&#123;<br>            <span class="hljs-keyword">let</span> id = <span class="hljs-variable language_">this</span>.<span class="hljs-property">$route</span>.<span class="hljs-property">params</span>.<span class="hljs-property">id</span>;<br>            <span class="hljs-keyword">let</span> userinfo = <span class="hljs-variable language_">this</span>.<span class="hljs-property">users</span>.<span class="hljs-title function_">find</span>(<span class="hljs-function">(<span class="hljs-params">item</span>) =&gt;</span> &#123;<br>                <span class="hljs-keyword">return</span> item.<span class="hljs-property">id</span> == id;<br>            &#125;)<br>            <span class="hljs-keyword">if</span> (userinfo != <span class="hljs-literal">undefined</span>) &#123;<br>                <span class="hljs-variable language_">this</span>.<span class="hljs-property">user</span> = userinfo;<br>            &#125;<br>            &#125;<br>    &#125;<br></code></pre></td></tr></table></figure><h3 id="监听"><a href="#监听" class="headerlink" title="监听"></a>监听</h3><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs js"><span class="hljs-comment">//监听</span><br><span class="hljs-attr">watch</span>: &#123;<br>    $route(to, <span class="hljs-keyword">from</span>) &#123;<br>      <span class="hljs-comment">// 对路由变化作出响应...</span><br>    &#125;<br></code></pre></td></tr></table></figure><h2 id="路由嵌套"><a href="#路由嵌套" class="headerlink" title="路由嵌套"></a>路由嵌套</h2><p>router&#x2F;index.js</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><code class="hljs js"><span class="hljs-attr">routes</span>:[<br>    &#123;<br>      <span class="hljs-attr">path</span>: <span class="hljs-string">&#x27;/my&#x27;</span>,<br>      <span class="hljs-attr">component</span>: <span class="hljs-function">()=&gt;</span><span class="hljs-keyword">import</span>(<span class="hljs-string">&#x27;@/views/my.vue&#x27;</span>),<br>      <span class="hljs-attr">children</span>:[<br>        &#123;<br>          <span class="hljs-attr">path</span>:<span class="hljs-string">&#x27;like&#x27;</span>,<br>          <span class="hljs-attr">component</span>:<span class="hljs-function">()=&gt;</span><span class="hljs-keyword">import</span>(<span class="hljs-string">&#x27;@/views/my_index/like.vue&#x27;</span>)<br>        &#125;<br>      ]<br>    &#125;<br>]<br></code></pre></td></tr></table></figure><p>app.vue</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">router-link</span> <span class="hljs-attr">to</span>=<span class="hljs-string">&quot;/my&quot;</span>&gt;</span>我的<span class="hljs-tag">&lt;/<span class="hljs-name">router-link</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">router-view</span>/&gt;</span><br></code></pre></td></tr></table></figure><p>my.vue</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">router-link</span> <span class="hljs-attr">to</span>=<span class="hljs-string">&quot;/my/like&quot;</span>&gt;</span>我的收藏<span class="hljs-tag">&lt;/<span class="hljs-name">router-link</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">router-view</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">router-view</span>&gt;</span><br></code></pre></td></tr></table></figure><h2 id="API"><a href="#API" class="headerlink" title="API"></a>API</h2><h3 id="vue-link"><a href="#vue-link" class="headerlink" title="vue-link"></a>vue-link</h3><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs js">&lt;router-link to=<span class="hljs-string">&quot;home&quot;</span>&gt;<span class="hljs-title class_">Home</span>&lt;/router-link&gt;<br><span class="hljs-comment">//渲染成某种标签tag</span><br><span class="language-xml"><span class="hljs-tag">&lt;<span class="hljs-name">router-link</span> <span class="hljs-attr">tag</span>=<span class="hljs-string">&quot;button&quot;</span> <span class="hljs-attr">to</span>=<span class="hljs-string">&quot;home&quot;</span>&gt;</span>Home<span class="hljs-tag">&lt;/<span class="hljs-name">router-link</span>&gt;</span></span><br></code></pre></td></tr></table></figure><h3 id="vue-view"><a href="#vue-view" class="headerlink" title="vue-view"></a>vue-view</h3><h2 id="补充"><a href="#补充" class="headerlink" title="补充"></a>补充</h2><ul><li><p>hash模式：”#”号后边的？前面</p></li><li><p>历史模式：不带# 域名后边的？前面</p></li></ul>]]></content>
    
    
    
    <tags>
      
      <tag>vue</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>vue中的import</title>
    <link href="/2023/03/07/vue%E4%B8%AD%E7%9A%84import/"/>
    <url>/2023/03/07/vue%E4%B8%AD%E7%9A%84import/</url>
    
    <content type="html"><![CDATA[<h2 id="准备条件"><a href="#准备条件" class="headerlink" title="准备条件"></a>准备条件</h2><p>在是<code>src</code>目录下，创建<code>utils</code>目录</p><h2 id="第一种"><a href="#第一种" class="headerlink" title="第一种"></a>第一种</h2><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><code class="hljs JS"><span class="hljs-keyword">function</span> <span class="hljs-title function_">month</span>(<span class="hljs-params">date</span>)&#123;<br>  <span class="hljs-keyword">return</span> <span class="hljs-string">&quot;month&quot;</span>;<br>&#125;<br><br><span class="hljs-keyword">function</span> <span class="hljs-title function_">day</span>(<span class="hljs-params"></span>)&#123;<br>  <span class="hljs-keyword">return</span> <span class="hljs-string">&quot;day&quot;</span>;<br>&#125;<br><span class="hljs-keyword">function</span> <span class="hljs-title function_">hour</span>(<span class="hljs-params"></span>)&#123;<br>  <span class="hljs-keyword">return</span> <span class="hljs-string">&quot;hour&quot;</span>;<br>&#125;<br><br><span class="hljs-comment">//导出对象</span><br><span class="hljs-keyword">export</span> <span class="hljs-keyword">default</span>&#123;<br>    <span class="hljs-attr">month</span>:month,<br>    <span class="hljs-attr">day</span>:day,<br>    <span class="hljs-attr">hour</span>:hour,<br>    <span class="hljs-comment">//直接在导出时定义函数</span><br>    <span class="hljs-title function_">year</span>(<span class="hljs-params">date</span>)&#123;<br>        <span class="hljs-keyword">return</span> <span class="hljs-string">&quot;year&quot;</span><br>    &#125;<br>&#125;<br><span class="hljs-comment">// &#123;下标(自己定义):值(函数名称)&#125;,</span><br><span class="hljs-comment">//当下标和值相等,下标和冒号去掉</span><br><br><br><span class="hljs-comment">//引入</span><br><span class="hljs-keyword">import</span> date form <span class="hljs-string">&#x27;@/utils/date.js&#x27;</span><br><span class="hljs-comment">//@ 等价于 /src 这个目录</span><br><span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(date.<span class="hljs-property">month</span>)<br><span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(date.<span class="hljs-title function_">month</span>())<br><span class="hljs-comment">// date.下标 = 定义的函数的名字</span><br></code></pre></td></tr></table></figure><h2 id="第二种：可以按需引入"><a href="#第二种：可以按需引入" class="headerlink" title="第二种：可以按需引入"></a>第二种：可以按需引入</h2><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs js"><span class="hljs-keyword">export</span> <span class="hljs-keyword">function</span> <span class="hljs-title function_">str</span>(<span class="hljs-params"></span>)&#123;<br>    <span class="hljs-keyword">return</span> <span class="hljs-string">&quot;字符串&quot;</span><br>&#125;<br><span class="hljs-keyword">export</span> <span class="hljs-keyword">function</span> <span class="hljs-title function_">num</span>(<span class="hljs-params"></span>)&#123;<br><span class="hljs-keyword">return</span> <span class="hljs-string">&quot;数字&quot;</span><br>&#125;<br><br><span class="hljs-comment">//引入</span><br><span class="hljs-keyword">import</span> &#123;str, num&#125; <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;@/utils/str.js&#x27;</span><br><span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(<span class="hljs-title function_">str</span>());<br></code></pre></td></tr></table></figure><h2 id="第三种-全局引入"><a href="#第三种-全局引入" class="headerlink" title="第三种 全局引入"></a>第三种 全局引入</h2><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs js"><span class="hljs-keyword">import</span> date <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;@/utils/date.js&#x27;</span><br><span class="hljs-title class_">Vue</span>.<span class="hljs-property"><span class="hljs-keyword">prototype</span></span>.<span class="hljs-property">data</span> = data<br><br><span class="hljs-keyword">new</span> <span class="hljs-title class_">Vue</span>(&#123;<br>    data<br>&#125;)<br></code></pre></td></tr></table></figure>]]></content>
    
    
    
    <tags>
      
      <tag>vue</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Git</title>
    <link href="/2023/02/24/Git/"/>
    <url>/2023/02/24/Git/</url>
    
    <content type="html"><![CDATA[<h1 id="Git配置"><a href="#Git配置" class="headerlink" title="Git配置"></a>Git配置</h1><h2 id="用户名和邮箱"><a href="#用户名和邮箱" class="headerlink" title="用户名和邮箱"></a>用户名和邮箱</h2><figure class="highlight lua"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs lua">git <span class="hljs-built_in">config</span> <span class="hljs-comment">--global user.name 用户名</span><br>git <span class="hljs-built_in">config</span> <span class="hljs-comment">--global user.email 邮箱</span><br></code></pre></td></tr></table></figure><p>查看本地配置：</p><figure class="highlight lua"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs lua">git <span class="hljs-built_in">config</span> <span class="hljs-comment">--list</span><br></code></pre></td></tr></table></figure><h2 id="拉取项目："><a href="#拉取项目：" class="headerlink" title="拉取项目："></a>拉取项目：</h2><figure class="highlight crmsh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs crmsh">git <span class="hljs-keyword">clone</span> <span class="hljs-title">项目链接</span><br></code></pre></td></tr></table></figure><h2 id="管理项目："><a href="#管理项目：" class="headerlink" title="管理项目："></a>管理项目：</h2><ol><li><p>新建文件夹</p></li><li><p>在项目跟目录打开控制台</p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs csharp">git <span class="hljs-keyword">init</span><br></code></pre></td></tr></table></figure><p>初始化项目，自动生成.git的隐藏文件</p></li></ol>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>从0开始配置你的windows</title>
    <link href="/2023/02/23/%E4%BB%8E0%E5%BC%80%E5%A7%8B%E9%85%8D%E7%BD%AE%E4%BD%A0%E7%9A%84windows/"/>
    <url>/2023/02/23/%E4%BB%8E0%E5%BC%80%E5%A7%8B%E9%85%8D%E7%BD%AE%E4%BD%A0%E7%9A%84windows/</url>
    
    <content type="html"><![CDATA[<h1 id="从0开始配置你的windows"><a href="#从0开始配置你的windows" class="headerlink" title="从0开始配置你的windows"></a>从0开始配置你的windows</h1><blockquote><p>给电脑重新安装了系统，记录一下配置的过程</p></blockquote><ol><li>在登陆微软账号时可以选择脱机使用（离线），如果登陆了账号后面的配置会变慢，并且用户名默认是账号的前5位。</li><li>进入桌面首先联网，然后更新驱动。</li><li>这时再登陆微软账号</li><li>设置桌面图标，任务栏图标</li><li>打开文件管理器，设置打开显示此电脑，显示文件拓展名，显示隐藏文件</li></ol><h2 id="首先解决网络问题，clash懂的都懂。"><a href="#首先解决网络问题，clash懂的都懂。" class="headerlink" title="首先解决网络问题，clash懂的都懂。"></a>首先解决网络问题，clash懂的都懂。</h2><p>一台电脑最重要的软件莫过于浏览器，有了浏览器连上网，我们就可以访问大千世界。</p><p>我的主力浏览器 是google浏览器，因此想要同步配置就需要科学上网。</p><h2 id="日常应用"><a href="#日常应用" class="headerlink" title="日常应用"></a>日常应用</h2><ul><li>浏览器：chrome</li><li>知名社交软件：QQ、微信</li><li>压缩工具：7zip</li><li>网盘：百度网盘、阿里云盘</li><li>网速查看：TrafficMonitor()</li><li>效率神器：Qucker</li><li>文件搜索：Everything</li><li>局域网传输：LocalSend</li><li>桌面整理：Fences</li><li>视频播放器：PotPlayer</li><li>截图工具：Snipaste</li><li>剪贴板：Ditto</li><li>写文档：typora</li><li>图床工具：Picgo</li><li>软件卸载：lObit</li><li>网盘挂载：alist</li></ul><h2 id="开发工具"><a href="#开发工具" class="headerlink" title="开发工具"></a>开发工具</h2><blockquote><p>工欲善其事必先利其器</p></blockquote><ul><li>vscode</li><li>sublime</li><li>arduino</li><li>git</li><li>node</li><li>远程控制：向日葵</li></ul>]]></content>
    
    
    
    <tags>
      
      <tag>Windows</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>浅试一下</title>
    <link href="/2023/02/10/%E6%B5%85%E8%AF%95%E4%B8%80%E4%B8%8B/"/>
    <url>/2023/02/10/%E6%B5%85%E8%AF%95%E4%B8%80%E4%B8%8B/</url>
    
    <content type="html"><![CDATA[<p> 新建博客文件：</p><figure class="highlight haxe"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs haxe">hexo <span class="hljs-keyword">new</span> <span class="hljs-type"></span>文件名<br></code></pre></td></tr></table></figure><p>依次输入：<code>hexo clean</code>,<code>hexo g</code>,<code>hexo s</code></p><table><thead><tr><th align="left">常用命令</th><th align="left">简写</th><th align="left">中文含义</th></tr></thead><tbody><tr><td align="left">hexo server</td><td align="left">hexo s</td><td align="left">本地启动</td></tr><tr><td align="left">hexo generate</td><td align="left">hexo g</td><td align="left">生成静态文件</td></tr><tr><td align="left">hexo deploy</td><td align="left">hexo d</td><td align="left">部署网站</td></tr><tr><td align="left">hexo clean</td><td align="left">hexo cl</td><td align="left">清除缓存和已经生成的静态文件</td></tr></tbody></table><p>一般情况，我们先依次输入<code>hexo clean</code>、 <code>hexo g</code> 、 <code>hexo s</code> ，没问题再 <code>hexo d</code>就行。</p>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>Hello World</title>
    <link href="/2023/02/10/hello-world/"/>
    <url>/2023/02/10/hello-world/</url>
    
    <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo new <span class="hljs-string">&quot;My New Post&quot;</span><br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo server<br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo generate<br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo deploy<br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>]]></content>
    
    
    
  </entry>
  
  
  
  
</search>
